'use client'
import { useEffect, useRef } from 'react'

interface UnicornBackgroundProps {
  projectId: string
  className?: string
}

declare global {
  interface Window {
    UnicornStudio: any
  }
}

export default function UnicornBackground({ 
  projectId, 
  className = "" 
}: UnicornBackgroundProps) {
  const containerRef = useRef<HTMLDivElement>(null)

  useEffect(() => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —É–∂–µ —Å–∫—Ä–∏–ø—Ç
    if (window.UnicornStudio && window.UnicornStudio.isInitialized) {
      return
    }

    // –î–û–ë–ê–í–õ–Ø–ï–ú –ú–û–ë–ò–õ–¨–ù–£–Æ –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Æ
    const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth <= 768;

    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏
    const forceGarbageCollection = () => {
      try {
        // 1. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ garbage collector (—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ Chrome DevTools)
        if ((window as any).gc) {
          (window as any).gc();
        }
        
        // 2. –°–æ–∑–¥–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º –±–æ–ª—å—à–æ–π –º–∞—Å—Å–∏–≤ –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏
        const forceCleanup = () => {
          let temp: any = new Array(1000000).fill(0);
          temp = null;
        };
        forceCleanup();
        
        // 3. –û—á–∏—â–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫—ç—à–∏ –±—Ä–∞—É–∑–µ—Ä–∞
        if ('caches' in window) {
          caches.keys().then(names => {
            names.forEach(name => {
              if (name.includes('unicorn') || name.includes('webgl')) {
                caches.delete(name);
              }
            });
          });
        }
        
        // 4. –û—á–∏—â–∞–µ–º Canvas –∫–æ–Ω—Ç–µ–∫—Å—Ç—ã (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã)
        const canvases = document.querySelectorAll('canvas');
        canvases.forEach(canvas => {
          const gl = canvas.getContext('webgl') || canvas.getContext('webgl2');
          if (gl) {
            // –û—á–∏—â–∞–µ–º WebGL –±—É—Ñ–µ—Ä—ã
            const ext = gl.getExtension('WEBGL_lose_context');
            if (ext) {
              ext.loseContext();
              // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
              setTimeout(() => {
                ext.restoreContext();
              }, 100);
            }
          }
        });
        
        console.log('üßπ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
        
      } catch (error) {
        console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –ø–∞–º—è—Ç–∏:', error);
      }
    };

    // –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞
    const removeWatermark = () => {
      // –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞
      if (!document.getElementById('unicorn-watermark-hider')) {
        const style = document.createElement('style')
        style.id = 'unicorn-watermark-hider'
        style.textContent = `
          /* –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º */
          [data-us-watermark],
          [class*="watermark"],
          [class*="Watermark"],
          [id*="watermark"],
          [id*="Watermark"] {
            display: none !important;
            visibility: hidden !important;
            opacity: 0 !important;
            pointer-events: none !important;
          }
          
          /* –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ —Ç–µ–∫—Å—Ç—É - –∏—Å–ø–æ–ª—å–∑—É–µ–º JavaScript –¥–ª—è —ç—Ç–æ–≥–æ */
          
          /* –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º */
          [href*="unicorn.studio"],
          [src*="unicorn.studio"] {
            display: none !important;
            visibility: hidden !important;
            opacity: 0 !important;
            pointer-events: none !important;
          }
        `
        document.head.appendChild(style)
      }

      // –£–¥–∞–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º
      const watermarkElements = document.querySelectorAll('[data-us-watermark]')
      watermarkElements.forEach(el => {
        if (el.parentNode) {
          el.parentNode.removeChild(el)
        }
      })
      
      // –£–¥–∞–ª—è–µ–º –ø–æ —Ç–µ–∫—Å—Ç—É —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
      const allDivs = document.querySelectorAll('div')
      allDivs.forEach(div => {
        if (div.textContent?.includes('Made with unicorn.studio') || 
            div.textContent?.includes('unicorn.studio') ||
            div.textContent?.includes('Unicorn Studio')) {
          div.style.display = 'none'
          div.style.visibility = 'hidden'
          div.style.opacity = '0'
          div.style.pointerEvents = 'none'
          div.remove()
        }
      })
      
      // –£–¥–∞–ª—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ unicorn.studio
      const allLinks = document.querySelectorAll('a')
      allLinks.forEach(link => {
        if (link.href?.includes('unicorn.studio') || 
            link.textContent?.includes('unicorn.studio') ||
            link.textContent?.includes('Unicorn Studio')) {
          link.style.display = 'none'
          link.style.visibility = 'hidden'
          link.style.opacity = '0'
          link.style.pointerEvents = 'none'
          link.remove()
        }
      })

      // –£–¥–∞–ª—è–µ–º span —ç–ª–µ–º–µ–Ω—Ç—ã —Å –≤–æ–¥—è–Ω—ã–º –∑–Ω–∞–∫–æ–º
      const allSpans = document.querySelectorAll('span')
      allSpans.forEach(span => {
        if (span.textContent?.includes('unicorn.studio') || 
            span.textContent?.includes('Unicorn Studio')) {
          span.style.display = 'none'
          span.style.visibility = 'hidden'
          span.style.opacity = '0'
          span.style.pointerEvents = 'none'
          span.remove()
        }
      })

      // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ –∫–ª–∞—Å—Å–∞–º
      const watermarkClasses = document.querySelectorAll('[class*="watermark"], [class*="Watermark"]')
      watermarkClasses.forEach(el => {
        if (el instanceof HTMLElement) {
          el.style.display = 'none'
          el.style.visibility = 'hidden'
          el.style.opacity = '0'
          el.style.pointerEvents = 'none'
        }
        el.remove()
      })
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç
    const script = document.createElement('script')
    script.type = 'text/javascript'
    script.src = 'https://cdn.jsdelivr.net/gh/hiunicornstudio/unicornstudio.js@v1.4.29/dist/unicornStudio.umd.js'
    
    script.onload = () => {
      try {
        if (window.UnicornStudio && !window.UnicornStudio.isInitialized) {
          window.UnicornStudio.init()
          window.UnicornStudio.isInitialized = true

          // –ú–û–ë–ò–õ–¨–ù–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø - –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
          if (isMobile) {
            
            // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –ü–ê–ú–Ø–¢–ò –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥
            const memoryCleanupInterval = setInterval(() => {
              forceGarbageCollection();
            }, 15000);

            // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–º—è—Ç–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
            let memoryMonitorInterval: NodeJS.Timeout | null = null;
            
            if ('memory' in performance) {
              const monitorMemory = () => {
                const memInfo = (performance as any).memory;
                const usedMB = Math.round(memInfo.usedJSHeapSize / 1048576);
                const totalMB = Math.round(memInfo.totalJSHeapSize / 1048576);
                
                console.log(`üìä –ü–∞–º—è—Ç—å: ${usedMB}MB / ${totalMB}MB`);
                
                // –ï—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 150MB - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞
                if (usedMB > 150) {
                  console.warn('‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏, –∑–∞–ø—É—Å–∫ –æ—á–∏—Å—Ç–∫–∏...');
                  forceGarbageCollection();
                }
                
                // –†–µ–∑–µ—Ä–≤–Ω–∞—è –ø–∞—É–∑–∞ –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –ø–∞–º—è—Ç–∏ (250MB+)
                if (usedMB > 250) {
                  console.error('üö® –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏! –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞—É–∑–∞...');
                  if (window.UnicornStudio && window.UnicornStudio.pause) {
                    window.UnicornStudio.pause();
                  }
                }
              };
              
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–º—è—Ç—å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
              memoryMonitorInterval = setInterval(monitorMemory, 10000);
            }
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            document.addEventListener('visibilitychange', () => {
              if (document.hidden && window.UnicornStudio && window.UnicornStudio.pause) {
                window.UnicornStudio.pause();
                // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–∏
                setTimeout(forceGarbageCollection, 500);
              } else if (!document.hidden && window.UnicornStudio && window.UnicornStudio.play) {
                window.UnicornStudio.play();
                // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ
                setTimeout(forceGarbageCollection, 1000);
              }
            });

            // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –ø–æ—Ç–µ—Ä–µ —Ñ–æ–∫—É—Å–∞ –æ–∫–Ω–∞
            window.addEventListener('blur', () => {
              if (window.UnicornStudio && window.UnicornStudio.pause) {
                window.UnicornStudio.pause();
              }
              setTimeout(forceGarbageCollection, 500);
            });

            // –í–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ñ–æ–∫—É—Å–∞
            window.addEventListener('focus', () => {
              if (window.UnicornStudio && window.UnicornStudio.play) {
                window.UnicornStudio.play();
              }
              setTimeout(forceGarbageCollection, 1000);
            });

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
            (window as any).unicornCleanupIntervals = {
              memoryCleanup: memoryCleanupInterval,
              memoryMonitor: memoryMonitorInterval
            };
          }
        }
        
        // –£–¥–∞–ª—è–µ–º –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        setTimeout(() => {
          removeWatermark()
        }, 1000)
        
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UnicornStudio:', err)
      }
    }
    
    script.onerror = (err) => {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ UnicornStudio:', err)
    }
    
    document.head.appendChild(script)

    // –£–¥–∞–ª—è–µ–º –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫ —Å—Ä–∞–∑—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    removeWatermark()
    
    // –°–æ–∑–¥–∞–µ–º MutationObserver –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const observer = new MutationObserver((mutations) => {
      mutations.forEach((mutation) => {
        if (mutation.type === 'childList') {
          mutation.addedNodes.forEach((node) => {
            if (node instanceof HTMLElement) {
              // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤–æ–¥—è–Ω–æ–≥–æ –∑–Ω–∞–∫–∞
              if (node.hasAttribute('data-us-watermark') ||
                  node.className?.includes('watermark') ||
                  node.className?.includes('Watermark') ||
                  node.id?.includes('watermark') ||
                  node.id?.includes('Watermark') ||
                  node.textContent?.includes('unicorn.studio') ||
                  node.textContent?.includes('Unicorn Studio')) {
                node.style.display = 'none'
                node.style.visibility = 'hidden'
                node.style.opacity = '0'
                node.style.pointerEvents = 'none'
                node.remove()
              }
            }
          })
        }
      })
    })

    // –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –≤ DOM
    observer.observe(document.body, {
      childList: true,
      subtree: true
    })

    // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ —É–¥–∞–ª—è–µ–º –≤–æ–¥—è–Ω–æ–π –∑–Ω–∞–∫
    const watermarkInterval = setInterval(removeWatermark, 500)
    
    // –û—á–∏—Å—Ç–∫–∞ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
      clearInterval(watermarkInterval)
    }, 30000)

    return () => {
      clearInterval(watermarkInterval)
      observer.disconnect()
      
      // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã –æ—á–∏—Å—Ç–∫–∏ –ø–∞–º—è—Ç–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
      if ((window as any).unicornCleanupIntervals) {
        const intervals = (window as any).unicornCleanupIntervals;
        if (intervals.memoryCleanup) clearInterval(intervals.memoryCleanup);
        if (intervals.memoryMonitor) clearInterval(intervals.memoryMonitor);
        delete (window as any).unicornCleanupIntervals;
      }
    }
    
  }, [projectId])

  return (
    <div 
      ref={containerRef}
      data-us-project={projectId}
      className={`fixed inset-0 w-screen h-screen -z-10 ${className}`}
      style={{
        width: '100vw',
        height: '100vh',
        position: 'fixed',
        top: 0,
        left: 0,
        zIndex: -1,
        minWidth: '100vw',
        minHeight: '100vh'
      }}
    />
  )
}